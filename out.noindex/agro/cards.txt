FastAPI BaseModel get_graph health Answer API for health check and answering queries using a built graph. /health /answer /Users/davidmontgomery/agro/serve_rag.py
answer get_graph Answer a question using strict per-repo routing. /search /Users/davidmontgomery/agro/serve_rag.py
search Search for relevant code locations without generation.  /Users/davidmontgomery/agro/serve_rag.py
_HF_PIPE _RERANKER DEFAULT_MODEL RERANK_BACKEND COHERE_MODEL _sigmoid _normalize Set up reranking configurations and define helper functions for score normalization.  /Users/davidmontgomery/agro/rerank.py
_maybe_init_hf_pipeline get_reranker Initialize a Hugging Face pipeline for text classification and fallback to a reranker if necessary.  /Users/davidmontgomery/agro/rerank.py
rerank_results Reranks results based on relevance to the provided query using either a remote API or a local model.  /Users/davidmontgomery/agro/rerank.py
_CACHE _repos_file_path Defines a cache dictionary and a function to retrieve the repository file path.  /Users/davidmontgomery/agro/config_loader.py
load_repos Load repository configuration from a file or environment variables.  /Users/davidmontgomery/agro/config_loader.py
list_repos get_default_repo _find_repo get_repo_paths Functions to manage and retrieve repository information.  /Users/davidmontgomery/agro/config_loader.py
out_dir get_repo_keywords path_boosts layer_bonuses These functions interact with repository data to retrieve specific attributes.  /Users/davidmontgomery/agro/config_loader.py
choose_repo_from_query Selects a repository based on a query string and returns the best match.  /Users/davidmontgomery/agro/config_loader.py
load_dotenv app uvicorn.run Start a Uvicorn server with environment variables loaded from a .env file.  /Users/davidmontgomery/agro/faxbot_rag.py
QdrantClient Tokenizer Stemmer generate_text rerank_results This code sets up a collection of imports and functions for handling data retrieval and ranking.  /Users/davidmontgomery/agro/hybrid_search.py
classify_query Classifies a given query string into various categories based on its content.  /Users/davidmontgomery/agro/hybrid_search.py
_project_layer_bonus Calculates the bonus percentage based on the specified layer and intent.  /Users/davidmontgomery/agro/hybrid_search.py
_project_layer_bonus _provider_plugin_hint Calculate bonus rates based on layer and intent for projects and hints for provider plugins.  /Users/davidmontgomery/agro/hybrid_search.py
_origin_bonus _feature_bonus _card_bonus Calculates bonus scores based on various input criteria.  /Users/davidmontgomery/agro/hybrid_search.py
_path_bonus Calculates a bonus based on specific suffixes in a file path.  /Users/davidmontgomery/agro/hybrid_search.py
_project_path_boost Calculates a boost factor based on the presence of specific tokens in a file path when the repo tag is 'project'.  /Users/davidmontgomery/agro/hybrid_search.py
_lazy_import_openai _lazy_import_voyage _local_embed_model Imports OpenAI and Voyage AI client with their respective API keys.  /Users/davidmontgomery/agro/hybrid_search.py
_get_embedding Generates embeddings for the given text using different models based on the environment configuration.  /Users/davidmontgomery/agro/hybrid_search.py
rrf _load_chunks Combines dense and sparse retrieval results using Reciprocal Rank Fusion.  /Users/davidmontgomery/agro/hybrid_search.py
_load_bm25_map _load_cards_bm25 Load BM25 point IDs and cards from specified directories.  /Users/davidmontgomery/agro/hybrid_search.py
_load_cards_map Loads card data and creates a mapping from card index to chunk ID and chunk ID to card metadata.  /Users/davidmontgomery/agro/hybrid_search.py
search QdrantClient bm25s.BM25 Tokenizer Stemmer Retrieves relevant code chunks based on a query using both dense and sparse retrieval methods.  /Users/davidmontgomery/agro/hybrid_search.py
_load_code_cache Loads code from a JSONL file into a cache for a specified repository.  /Users/davidmontgomery/agro/hybrid_search.py
_apply_filename_boosts Assigns increased scores to documents based on the presence of query terms in their filenames and paths.  /Users/davidmontgomery/agro/hybrid_search.py
route_repo Determines the relevant repository based on the user's query.  /Users/davidmontgomery/agro/hybrid_search.py
search_routed expand_queries This code performs routed searches and expands queries into multiple variants.  /Users/davidmontgomery/agro/hybrid_search.py
search_routed_multi Searches for query variants in a specified repository and returns deduplicated and reranked results.  /Users/davidmontgomery/agro/hybrid_search.py
_should_index_file _prune_dirs_in_place Functions to determine file indexing eligibility and prune specified directories.  /Users/davidmontgomery/agro/filtering.py
client Initializes and retrieves an OpenAI client for API interactions.  /Users/davidmontgomery/agro/env_model.py
_extract_text Extracts text from a response object, preferring an available output text property.  /Users/davidmontgomery/agro/env_model.py
generate_text Minimal wrapper over Responses API for generating text based on user input and optional parameters.  /Users/davidmontgomery/agro/env_model.py
run_eval hit GOLDEN_PATH USE_MULTI FINAL_K search_routed search_routed_multi Minimal evaluation loop with regression tracking.  /Users/davidmontgomery/agro/eval_loop.py
run_eval_with_results Run evaluation and return detailed results of hits based on expected paths.  /Users/davidmontgomery/agro/eval_loop.py
save_baseline Saves current results as a baseline to a JSON file.  /Users/davidmontgomery/agro/eval_loop.py
compare_with_baseline Compare current results with baseline results and report discrepancies.  /Users/davidmontgomery/agro/eval_loop.py
watch_mode Monitors specified files for changes and re-runs evaluation on modifications.  /Users/davidmontgomery/agro/eval_loop.py
main watch_mode run_eval_with_results save_baseline compare_with_baseline Execute evaluation loop for regression tracking with options for baseline saving and comparison.  /Users/davidmontgomery/agro/eval_loop.py
load_dotenv os.getenv os.path.join generate_text iter_chunks This code loads environment variables and processes chunks of data for retrieval.  /Users/davidmontgomery/agro/build_cards.py
main generate_text os.makedirs iter_chunks Process code chunks to extract cards with metadata.  /Users/davidmontgomery/agro/build_cards.py
FastMCP build_graph search_routed_multi _get_graph Sets up a multi-configuration pipeline for a service using FastMCP.  /Users/davidmontgomery/agro/mcp_server_http.py
answer Answer a codebase question using a local LangGraph by retrieving and generating responses.  /Users/davidmontgomery/agro/mcp_server_http.py
search Retrieve relevant code locations without generation. /mcp /Users/davidmontgomery/agro/mcp_server_http.py
_blocked This code prevents the usage of the legacy Chat Completions API in the OpenAI library.  /Users/davidmontgomery/agro/sitecustomize.py
load_dotenv find_dotenv RAGState generate_text Load environment variables and define a data structure for RAG state management.  /Users/davidmontgomery/agro/langgraph_app.py
should_use_multi_query retrieve_node Determines if multi-query is needed based on the input question and retrieves relevant documents using a hybrid search.  /Users/davidmontgomery/agro/langgraph_app.py
route_after_retrieval rewrite_query Determines the action to take after document retrieval and rewrites queries for code search.  /Users/davidmontgomery/agro/langgraph_app.py
generate_node generate_text hybrid_search_routed_multi Generates a response based on a question and provided document context, with citation details.  /Users/davidmontgomery/agro/langgraph_app.py
fallback_node Generates a message indicating low confidence from local code with repository information.  /Users/davidmontgomery/agro/langgraph_app.py
build_graph StateGraph RedisSaver Builds and compiles a state graph for processing retrieval queries.  /Users/davidmontgomery/agro/langgraph_app.py
hit Check if any expected paths are present in the given paths.  /Users/davidmontgomery/agro/eval_rag.py
main Processes a golden file to evaluate search hits based on user queries.  /Users/davidmontgomery/agro/eval_rag.py
